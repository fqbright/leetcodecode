class Solution {
public:
    int BinarySearch(int A[],int n,int target,bool turn_left){
        int i=0,j=n-1;
        while(i<=j){
            int mid = i + (j-i)/2;
            if(A[mid]==target){
                if(turn_left) j = mid-1;
                else i = mid+1;
            }else if(A[mid]>target)
              j = mid-1;
            else i = mid+1;
        }
        return turn_left?i:j;
    }
    vector<int> searchRange(int A[], int n, int target) {
        vector<int> result;
        result.push_back(BinarySearch(A,n,target,true));
        result.push_back(BinarySearch(A,n,target,false));    
        if(result[1] < result[0])
          result[0] = result[1] = -1;
        return result;
    }
};