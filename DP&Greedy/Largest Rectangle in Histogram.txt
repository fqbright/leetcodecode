//两种一样的方法，写了两次

class Solution {
public:
    int largestRectangleArea(vector<int> &height) {
        stack<int> stk;
        int max_area=0;
        for(int i=0;i<=height.size();){
            if(stk.empty()){
              stk.push(i++);
            }else{
              int t = stk.top();
              if(i!=height.size()&&height[t]<=height[i]){
                  stk.push(i++);
              }else{
                  stk.pop();
                  if(stk.empty()){
                      max_area = max(max_area,height[t]*i);
                  }else{
                      max_area = max(max_area,height[t]*(i-stk.top()-1));
                  }
              }
            }
        }
        return max_area;
    }
};

class Solution {
public:
    int largestRectangleArea(vector<int> &height) {
        stack<int> s;
        if(height.size()==0) return 0;
        height.push_back(0);
        s.push(0);
        int max = 0;
        for(int i=1;i<height.size();)
        {
            if(height[i]>=height[s.top()])
                s.push(i++);
            else
            {
                int index = s.top();
                s.pop();
                if(s.empty())
                {
                    if(i*height[index]>max)
                        max = i*height[index];
                    s.push(i++);
                }
                else if((i-s.top()-1)*height[index]>max)
                    max = (i-s.top()-1)*height[index];
            }
        }
        return max;
    }
};