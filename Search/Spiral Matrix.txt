//仔细判断每个边界条件
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int> > &matrix) {
      vector<int> r;
      if(matrix.empty()) return r;
      int n = matrix.size(), m = matrix[0].size();
      int cir_num = (min(n,m) + 1)/2;
      for(int i = 0; i < cir_num; ++i){
        for(int j = i; j < m - i; ++j)
          r.push_back(matrix[i][j]);
        
        for(int j = i + 1; j < n - i; ++j)
          r.push_back(matrix[j][m-i-1]);
        
        if( 2 * i + 1 == n || 2 * i + 1 == m )
          return r;
          
        for(int j = m-2-i; j > i; --j)
          r.push_back(matrix[n-1-i][j]);
          
        for(int j = n-1-i; j > i; --j)
          r.push_back(matrix[j][i]);
      }
      return r;
    }
};